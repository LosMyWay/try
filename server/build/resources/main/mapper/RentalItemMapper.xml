<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjq.programmer.dao.RentalItemMapper">
  <resultMap id="BaseResultMap" type="com.yjq.programmer.domain.RentalItem">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="book_id" jdbcType="CHAR" property="bookId" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="return_time" jdbcType="DATE" property="returnTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="predict_time" jdbcType="DATE" property="predictTime" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_photo" jdbcType="VARCHAR" property="bookPhoto" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_id, user_id, create_time, return_time, `state`, predict_time, money, note,
    book_name, book_photo
  </sql>
  <select id="selectByExample" parameterType="com.yjq.programmer.domain.RentalItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rental_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from rental_item
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rental_item
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yjq.programmer.domain.RentalItemExample">
    delete from rental_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yjq.programmer.domain.RentalItem">
    insert into rental_item (id, book_id, user_id, create_time,
      return_time, `state`, predict_time,
      money, note, book_name,
      book_photo)
    values (#{id,jdbcType=CHAR}, #{bookId,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{returnTime,jdbcType=DATE}, #{state,jdbcType=INTEGER}, #{predictTime,jdbcType=DATE},
      #{money,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR},
      #{bookPhoto,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yjq.programmer.domain.RentalItem">
    insert into rental_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="predictTime != null">
        predict_time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookPhoto != null">
        book_photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="predictTime != null">
        #{predictTime,jdbcType=DATE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPhoto != null">
        #{bookPhoto,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjq.programmer.domain.RentalItemExample" resultType="java.lang.Integer">
    select count(*) from rental_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rental_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null">
        return_time = #{record.returnTime,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.predictTime != null">
        predict_time = #{record.predictTime,jdbcType=DATE},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPhoto != null">
        book_photo = #{record.bookPhoto,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rental_item
    set id = #{record.id,jdbcType=CHAR},
      book_id = #{record.bookId,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      return_time = #{record.returnTime,jdbcType=DATE},
      `state` = #{record.state,jdbcType=INTEGER},
      predict_time = #{record.predictTime,jdbcType=DATE},
      money = #{record.money,jdbcType=DECIMAL},
      note = #{record.note,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_photo = #{record.bookPhoto,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjq.programmer.domain.RentalItem">
    update rental_item
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="predictTime != null">
        predict_time = #{predictTime,jdbcType=DATE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPhoto != null">
        book_photo = #{bookPhoto,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yjq.programmer.domain.RentalItem">
    update rental_item
    set book_id = #{bookId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=DATE},
      `state` = #{state,jdbcType=INTEGER},
      predict_time = #{predictTime,jdbcType=DATE},
      money = #{money,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_photo = #{bookPhoto,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
